def make_icon(fname):
	import os, sys
	from vyperlogix.misc import _utils
	from vyperlogix.misc import _base64

	_data = \
	"""
	"""

	_root_ = os.path.dirname(sys.argv[0])
	fname = os.sep.join([_root_,fname])
	bool = (not os.path.exists(fname))
	if (not bool):
		st = os.stat(fname)
		ts = st.st_mtime
		dt = _utils.getFromTimeStampForFileName(_utils.getAsDateTimeStrFromTimeSeconds(ts))
		
		st2 = os.stat(sys.argv[0])
		ts2 = st2.st_mtime
		dt2 = _utils.getFromTimeStampForFileName(_utils.getAsDateTimeStrFromTimeSeconds(ts2))
	
		bool = bool | (dt2 > dt)
	
	if (bool):
		data = _base64.fromBase64(_data,fname)
	return fname
