def seedPassword():
    import random
    s = ''.join([chr(random.randint(0,254)) for ch in xrange(1024)])
    print 's=[%s]' % asReadableData(s)
    return s

s = [153,26,153,218,247,171,33,97,169,94,55,193,122,155,164,197,113,47,94,78,56,27,122,34,72,144,156,130,230,35,63,125,122,253,216,151,225,157,3,253,55,173,162,214,72,181,22,40,107,3,191,151,80,70,218,205,178,164,102,253,177,220,183,247,37,87,162,244,84,148,46,18,202,240,196,165,236,225,28,16,170,136,146,84,167,62,105,222,185,220,27,82,109,191,165,245,18,254,67,203,176,49,136,225,38,134,21,124,223,44,76,72,112,125,229,238,78,16,224,180,31,53,35,69,44,161,93,118,95,37,93,47,48,182,6,35,12,176,183,71,90,5,107,205,92,45,21,229,249,214,224,130,143,4,11,133,233,6,90,44,163,48,126,141,28,246,66,114,138,180,229,35,119,206,152,231,33,39,116,234,108,39,140,163,154,39,61,243,6,87,136,67,195,171,248,78,13,6,215,204,196,43,109,96,143,203,132,176,193,218,205,241,252,94,71,80,187,81,155,219,31,196,72,207,40,39,253,116,239,198,18,18,121,106,3,252,88,235,196,219,223,173,102,194,9,250,18,81,101,56,67,154,40,1,119,172,195,120,169,120,219,12,14,111,161,226,224,156,69,174,78,147,251,208,248,221,77,112,131,
   157,44,240,168,48,220,22,238,161,18,92,192,219,188,213,41,168,56,52,61,124,26,164,240,11,75,238,209,10,32,152,192,29,177,221,242,78,184,154,3,27,229,164,199,10,233,32,204,7,90,71,46,168,151,4,172,72,125,27,87,171,235,27,33,47,142,22,110,252,9,0,41,28,124,71,174,237,249,117,22,165,135,15,150,88,9,185,80,198,213,182,234,220,173,233,159,204,212,226,236,20,206,40,105,91,143,188,100,89,47,27,123,77,245,225,23,18,175,81,104,130,118,218,192,99,93,230,130,65,70,166,23,13,171,104,209,29,178,42,219,151,186,249,135,216,31,240,111,4,114,104,29,104,30,104,66,74,80,243,248,137,169,18,128,113,113,171,24,229,152,150,119,144,210,49,31,94,202,193,164,136,53,28,82,239,42,88,206,64,33,21,150,239,24,248,184,75,138,6,212,137,242,85,200,74,193,225,59,206,168,53,236,112,166,26,138,55,205,14,59,216,200,187,209,53,117,9,118,224,83,17,140,189,160,66,46,157,164,181,102,87,96,192,151,208,109,198,179,59,138,147,115,92,110,50,77,43,64,75,172,248,182,161,194,186,18,228,212,200,131,213,192,84,110,119,84,246,205,69,57,
   133,117,31,236,213,244,231,42,92,110,50,217,175,228,210,157,152,9,35,199,182,149,85,193,250,244,194,114,7,35,51,69,54,77,196,120,211,92,184,136,201,61,24,192,49,252,205,104,109,201,31,193,141,198,102,233,229,237,225,190,229,126,157,147,7,214,77,116,241,3,217,72,86,8,150,220,212,223,144,19,248,19,68,168,155,90,252,7,56,136,8,226,19,179,131,155,185,214,23,76,30,211,43,62,7,220,143,104,55,117,135,215,234,40,113,1,224,2,61,206,206,103,60,82,174,6,188,148,119,44,180,227,241,189,85,95,55,218,191,251,217,150,223,236,128,171,73,210,218,219,101,198,178,6,185,88,75,27,53,226,122,80,153,152,8,138,217,65,211,85,37,223,16,137,160,37,248,130,174,24,79,91,220,162,112,213,29,137,181,39,122,172,172,185,253,43,190,203,62,195,99,168,186,156,246,100,245,172,191,77,149,30,103,25,51,198,16,214,143,25,5,99,173,238,204,102,199,0,217,130,143,149,189,172,241,174,139,119,221,230,51,178,81,195,249,172,223,71,110,69,6,19,66,205,226,55,218,139,114,244,55,89,122,48,97,250,140,173,238,22,254,73,78,180,236,8,205,135,
   95,84,237,182,80,49,70,172,126,34,253,39,18,23,25,196,43,240,114,95,236,171,164,166,20,42,192,81,52,60,61,204,57,22,3,83,150,186,42,15,216,145,138,69,81,31,31,84,99,41,78,86,198,129,22,241,98,226,157,215,79,64,138,74,24,69,25,6,230,91,44,109,207,160,92,41,239,220,103,12,171,46,69,69,25,17,247,87,126,171,2,32,235,170,2,55,15,226,186,213,129,43,91,236,112,167,122,212,222,32,52,209,17,130,157,122,159,61,97,114,254,217,174,87,34,176,180,229,215,226,94,114,145,252,233,115,106,148,30,62,58,247,92,93,87,208,65,120,21,222,175,205,127,159,78,240,231,227,53,42,91,240,50,249,252,85,180,11,92,120,62,83,181,19,230,73,239,132,227,135,238,49,112,239,98,187,228]
_cipher_password = ''.join([chr(ch) for ch in s])
#_cipher_password = seedPassword()

def encryptData(data):
    from Crypto.Cipher import Blowfish
    cObj = Blowfish.new(_cipher_password, Blowfish.MODE_ECB)
    m = len(data)
    n = 8-divmod(m,8)[-1]
    data += '\0'*n
    mm = len(data)
    eData = cObj.encrypt(data)
    sData = cObj.decrypt(eData)
    assert sData == data, 'Oops, something went wrong in "%s".' % _utils.funcName()
    return eData
 
def decryptData(data):
    from Crypto.Cipher import Blowfish
    cObj = Blowfish.new(_cipher_password, Blowfish.MODE_ECB)
    sData = cObj.decrypt(data)
    return sData
 
