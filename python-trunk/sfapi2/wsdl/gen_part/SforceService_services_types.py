################################################## 
# SforceService_services_types.py 
# generated by ZSI.wsdl2python 
# 
# 
##################################################


import ZSI
from ZSI.TCcompound import Struct

############################## 
# targetNamespace 
#
# urn:sobject.partner.soap.sforce.com 
##############################


# imported as: ns1
class urn_sobject_partner_soap_sforce_com:
    targetNamespace = 'urn:sobject.partner.soap.sforce.com'

    class sObject_Def(ZSI.TCcompound.Struct):
        schema = 'urn:sobject.partner.soap.sforce.com'
        type = 'sObject'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._type = None
            self._fieldsToNull = None
            self._Id = None

            TClist = [ZSI.TC.String(pname="type",aname="_type"), ZSI.TC.String(pname="fieldsToNull",aname="_fieldsToNull", repeatable=1, optional=1), ns1.ID_Def(name="Id",ns=ns, optional=1), ZSI.TC.Any(pname=None,aname=None, repeatable=1, optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class ID_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

# define class alias for subsequent ns classes
ns1 = urn_sobject_partner_soap_sforce_com



############################## 
# targetNamespace 
#
# urn:partner.soap.sforce.com 
##############################


# imported as: ns2
class urn_partner_soap_sforce_com:
    targetNamespace = 'urn:partner.soap.sforce.com'

    class GetUserInfoResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'GetUserInfoResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._currencySymbol = None
            self._organizationMultiCurrency = None
            self._organizationId = None
            self._organizationName = None
            self._userDefaultCurrencyIsoCode = None
            self._userEmail = None
            self._userFullName = None
            self._userId = None
            self._userLanguage = None
            self._userLocale = None
            self._userTimeZone = None

            TClist = [ZSI.TC.String(pname="currencySymbol",aname="_currencySymbol"), ZSI.TC.Boolean(pname="organizationMultiCurrency",aname="_organizationMultiCurrency"), ns2.ID_Def(name="organizationId",ns=ns), ZSI.TC.String(pname="organizationName",aname="_organizationName"), ZSI.TC.String(pname="userDefaultCurrencyIsoCode",aname="_userDefaultCurrencyIsoCode", optional=1), ZSI.TC.String(pname="userEmail",aname="_userEmail"), ZSI.TC.String(pname="userFullName",aname="_userFullName"), ns2.ID_Def(name="userId",ns=ns), ZSI.TC.String(pname="userLanguage",aname="_userLanguage"), ZSI.TC.String(pname="userLocale",aname="_userLocale"), ZSI.TC.String(pname="userTimeZone",aname="_userTimeZone"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class GetServerTimestampResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'GetServerTimestampResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._timestamp = None

            TClist = [ZSI.TCtimes.gDateTime(pname="timestamp",aname="_timestamp"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class DescribeGlobalResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'DescribeGlobalResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._encoding = None
            self._maxBatchSize = None
            self._types = None

            TClist = [ZSI.TC.String(pname="encoding",aname="_encoding", optional=1), ZSI.TCnumbers.Iint(pname="maxBatchSize",aname="_maxBatchSize"), ZSI.TC.String(pname="types",aname="_types", repeatable=1, optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class ResetPasswordResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'ResetPasswordResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._password = None

            TClist = [ZSI.TC.String(pname="password",aname="_password"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class GetUpdatedResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'GetUpdatedResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._ids = None
            self._sforceReserved = None

            TClist = [ns2.ID_Def(name="ids",ns=ns, repeatable=1, optional=1), ZSI.TC.String(pname="sforceReserved",aname="_sforceReserved", optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class Error_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'Error'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._fields = None
            self._message = None
            self._statusCode = None

            TClist = [ZSI.TC.String(pname="fields",aname="_fields", repeatable=1, optional=1), ZSI.TC.String(pname="message",aname="_message"), ns2.StatusCode_Def(name="statusCode",ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class SetPasswordResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'SetPasswordResult'

        def __init__(self, name=None, ns=None, **kw):

            TClist = []

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class DeletedRecord_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'DeletedRecord'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._id = None
            self._deletedDate = None

            TClist = [ns2.ID_Def(name="id",ns=ns), ZSI.TCtimes.gDateTime(pname="deletedDate",aname="_deletedDate"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class LoginResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'LoginResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._serverUrl = None
            self._sessionId = None
            self._userId = None

            TClist = [ZSI.TC.String(pname="serverUrl",aname="_serverUrl", optional=1), ZSI.TC.String(pname="sessionId",aname="_sessionId"), ns2.ID_Def(name="userId",ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class PicklistEntry_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'PicklistEntry'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._active = None
            self._defaultValue = None
            self._label = None
            self._value = None

            TClist = [ZSI.TC.Boolean(pname="active",aname="_active"), ZSI.TC.Boolean(pname="defaultValue",aname="_defaultValue"), ZSI.TC.String(pname="label",aname="_label", optional=1), ZSI.TC.String(pname="value",aname="_value"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class retrieve_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'retrieve'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._fieldList = None
            self._sObjectType = None
            self._ids = None

            TClist = [ZSI.TC.String(pname="fieldList",aname="_fieldList"), ZSI.TC.String(pname="sObjectType",aname="_sObjectType"), ns2.ID_Def(name="ids",ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class query_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'query'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._queryString = None

            TClist = [ZSI.TC.String(pname="queryString",aname="_queryString"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class SaveOptions_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'SaveOptions'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._autoAssign = None
            self._assignmentRuleId = None

            TClist = [ZSI.TC.Boolean(pname="autoAssign",aname="_autoAssign"), ns2.ID_Def(name="assignmentRuleId",ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getUpdated_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getUpdated'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sObjectType = None
            self._startDate = None
            self._endDate = None

            TClist = [ZSI.TC.String(pname="sObjectType",aname="_sObjectType"), ZSI.TCtimes.gDateTime(pname="startDate",aname="_startDate"), ZSI.TCtimes.gDateTime(pname="endDate",aname="_endDate"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getUserInfo_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getUserInfo'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars

            TClist = []

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class describeGlobal_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'describeGlobal'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars

            TClist = []

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getDeleted_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getDeleted'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sObjectType = None
            self._startDate = None
            self._endDate = None

            TClist = [ZSI.TC.String(pname="sObjectType",aname="_sObjectType"), ZSI.TCtimes.gDateTime(pname="startDate",aname="_startDate"), ZSI.TCtimes.gDateTime(pname="endDate",aname="_endDate"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class SessionHeader_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'SessionHeader'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sessionId = None

            TClist = [ZSI.TC.String(pname="sessionId",aname="_sessionId"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class QueryOptions_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'QueryOptions'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._batchSize = None

            TClist = [ZSI.TCnumbers.Iint(pname="batchSize",aname="_batchSize", optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class resetPassword_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'resetPassword'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._userId = None

            TClist = [ns2.ID_Def(name="userId",ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getServerTimestamp_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getServerTimestamp'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars

            TClist = []

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class CallOptions_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'CallOptions'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._client = None

            TClist = [ZSI.TC.String(pname="client",aname="_client"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class search_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'search'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._searchString = None

            TClist = [ZSI.TC.String(pname="searchString",aname="_searchString"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class describeSObject_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'describeSObject'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sObjectType = None

            TClist = [ZSI.TC.String(pname="sObjectType",aname="_sObjectType"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class queryMore_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'queryMore'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._queryLocator = None

            TClist = [ns2.QueryLocator_Def(name="queryLocator",ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class setPassword_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'setPassword'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._userId = None
            self._password = None

            TClist = [ns2.ID_Def(name="userId",ns=ns), ZSI.TC.String(pname="password",aname="_password"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class login_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'login'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._username = None
            self._password = None

            TClist = [ZSI.TC.String(pname="username",aname="_username"), ZSI.TC.String(pname="password",aname="_password"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class delete_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'delete'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._ids = None

            TClist = [ns2.ID_Def(name="ids",ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class getUserInfoResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getUserInfoResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.GetUserInfoResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getServerTimestampResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getServerTimestampResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.GetServerTimestampResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class describeGlobalResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'describeGlobalResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.DescribeGlobalResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class resetPasswordResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'resetPasswordResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.ResetPasswordResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class getUpdatedResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getUpdatedResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.GetUpdatedResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class SaveResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'SaveResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._errors = None
            self._id = None
            self._success = None

            TClist = [ns2.Error_Def(name="errors", ns=ns, repeatable=1, optional=1), ns2.ID_Def(name="id",ns=ns), ZSI.TC.Boolean(pname="success",aname="_success"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class DeleteResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'DeleteResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._errors = None
            self._id = None
            self._success = None

            TClist = [ns2.Error_Def(name="errors", ns=ns, repeatable=1, optional=1), ns2.ID_Def(name="id",ns=ns), ZSI.TC.Boolean(pname="success",aname="_success"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class setPasswordResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'setPasswordResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.SetPasswordResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class GetDeletedResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'GetDeletedResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._deletedRecords = None
            self._sforceReserved = None

            TClist = [ns2.DeletedRecord_Def(name="deletedRecords", ns=ns, repeatable=1, optional=1), ZSI.TC.String(pname="sforceReserved",aname="_sforceReserved", optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class loginResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'loginResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.LoginResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class Field_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'Field'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._byteLength = None
            self._createable = None
            self._custom = None
            self._digits = None
            self._filterable = None
            self._label = None
            self._length = None
            self._name = None
            self._nameField = None
            self._nillable = None
            self._picklistValues = None
            self._precision = None
            self._referenceTo = None
            self._restrictedPicklist = None
            self._scale = None
            self._soapType = None
            self._type = None
            self._updateable = None

            TClist = [ZSI.TCnumbers.Iint(pname="byteLength",aname="_byteLength"), ZSI.TC.Boolean(pname="createable",aname="_createable"), ZSI.TC.Boolean(pname="custom",aname="_custom"), ZSI.TCnumbers.Iint(pname="digits",aname="_digits"), ZSI.TC.Boolean(pname="filterable",aname="_filterable"), ZSI.TC.String(pname="label",aname="_label"), ZSI.TCnumbers.Iint(pname="length",aname="_length"), ZSI.TC.String(pname="name",aname="_name"), ZSI.TC.Boolean(pname="nameField",aname="_nameField"), ZSI.TC.Boolean(pname="nillable",aname="_nillable"), ns2.PicklistEntry_Def(name="picklistValues", ns=ns, repeatable=1, optional=1), ZSI.TCnumbers.Iint(pname="precision",aname="_precision"), ZSI.TC.String(pname="referenceTo",aname="_referenceTo", repeatable=1, optional=1), ZSI.TC.Boolean(pname="restrictedPicklist",aname="_restrictedPicklist"), ZSI.TCnumbers.Iint(pname="scale",aname="_scale"), ns2.soapType_Def(name="soapType",ns=ns), ns2.fieldType_Def(name="type",ns=ns), ZSI.TC.Boolean(pname="updateable",aname="_updateable"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class createResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'createResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.SaveResult_Def(name="result", ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class updateResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'updateResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.SaveResult_Def(name="result", ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class deleteResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'deleteResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.DeleteResult_Def(name="result", ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class getDeletedResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'getDeletedResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.GetDeletedResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class DescribeSObjectResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'DescribeSObjectResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._activateable = None
            self._createable = None
            self._custom = None
            self._deletable = None
            self._fields = None
            self._label = None
            self._name = None
            self._queryable = None
            self._retrieveable = None
            self._replicateable = None
            self._searchable = None
            self._updateable = None
            self._undeletable = None

            TClist = [ZSI.TC.Boolean(pname="activateable",aname="_activateable"), ZSI.TC.Boolean(pname="createable",aname="_createable"), ZSI.TC.Boolean(pname="custom",aname="_custom"), ZSI.TC.Boolean(pname="deletable",aname="_deletable"), ns2.Field_Def(name="fields", ns=ns, repeatable=1, optional=1), ZSI.TC.String(pname="label",aname="_label"), ZSI.TC.String(pname="name",aname="_name"), ZSI.TC.Boolean(pname="queryable",aname="_queryable"), ZSI.TC.Boolean(pname="retrieveable",aname="_retrieveable"), ZSI.TC.Boolean(pname="replicateable",aname="_replicateable"), ZSI.TC.Boolean(pname="searchable",aname="_searchable"), ZSI.TC.Boolean(pname="updateable",aname="_updateable"), ZSI.TC.Boolean(pname="undeletable",aname="_undeletable"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class describeSObjectResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'describeSObjectResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.DescribeSObjectResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class queryResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'queryResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.QueryResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class queryMoreResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'queryMoreResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.QueryResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class searchResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'searchResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns2.SearchResult_Def(name="result", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class SearchResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'SearchResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._searchRecords = None
            self._sforceReserved = None

            TClist = [ns2.SearchRecord_Def(name="searchRecords", ns=ns, repeatable=1, optional=1), ZSI.TC.String(pname="sforceReserved",aname="_sforceReserved", optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class QueryResult_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'QueryResult'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._done = None
            self._queryLocator = None
            self._records = None
            self._size = None

            TClist = [ZSI.TC.Boolean(pname="done",aname="_done"), ns2.QueryLocator_Def(name="queryLocator",ns=ns, optional=1), ns1.sObject_Def(name="records", ns=ns, repeatable=1, optional=1), ZSI.TCnumbers.Iint(pname="size",aname="_size"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class SearchRecord_Def(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        type = 'SearchRecord'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._record = None

            TClist = [ns1.sObject_Def(name="record", ns=ns), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class create_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'create'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sObjects = None

            TClist = [ns1.sObject_Def(name="sObjects", ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class update_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'update'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._sObjects = None

            TClist = [ns1.sObject_Def(name="sObjects", ns=ns, repeatable=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class retrieveResponse_Dec(ZSI.TCcompound.Struct):
        schema = 'urn:partner.soap.sforce.com'
        literal = 'retrieveResponse'

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            # internal vars
            self._result = None

            TClist = [ns1.sObject_Def(name="result", ns=ns, repeatable=1, optional=1), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           hasextras=1, **kw)

    class soapType_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

    class StatusCode_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

    class QueryLocator_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

    class fieldType_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

    class ID_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

# define class alias for subsequent ns classes
ns2 = urn_partner_soap_sforce_com



############################## 
# targetNamespace 
#
# urn:fault.partner.soap.sforce.com 
##############################


# imported as: ns3
class urn_fault_partner_soap_sforce_com:
    targetNamespace = 'urn:fault.partner.soap.sforce.com'

    class ApiFault_Def(ZSI.TCcompound.Struct):
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'ApiFault'

        def __init__(self, name=None, ns=None, **kw):
            # internal vars
            self._exceptionCode = None
            self._exceptionMessage = None

            TClist = [ns3.ExceptionCode_Def(name="exceptionCode",ns=ns), ZSI.TC.String(pname="exceptionMessage",aname="_exceptionMessage"), ]

            oname = name

            if name:
                aname = '_%s' % name
                if ns:
                    oname += ' xmlns="%s"' % ns
                else:
                    oname += ' xmlns="%s"' % self.__class__.schema
            else:
                aname = None

            ZSI.TCcompound.Struct.__init__(self, self.__class__, TClist,
                                           pname=name, inorder=0,
                                           aname=aname, oname=oname,
                                           **kw)

    class InvalidSObjectFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'InvalidSObjectFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class InvalidQueryLocatorFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'InvalidQueryLocatorFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class InvalidFieldFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'InvalidFieldFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class MalformedSearchFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'MalformedSearchFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class InvalidIdFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'InvalidIdFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class UnexpectedErrorFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'UnexpectedErrorFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class LoginFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'LoginFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class MalformedQueryFault_Def(ApiFault_Def):
        # rudimentary - more soon
        schema = 'urn:fault.partner.soap.sforce.com'
        type = 'MalformedQueryFault'

        def __init__(self, name=None, ns=None, **kw):

            if name:
                TCList = []
                ns3.ApiFault_Def.__init__(self, name=name, ns=ns, **kw)
                # extending....
                self.ofwhat += tuple(TCList)

    class InvalidSObjectFault_Dec(InvalidSObjectFault_Def):
        literal = "InvalidSObjectFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.InvalidSObjectFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.InvalidSObjectFault_Def(name=name, ns=ns, **kw)

    class InvalidQueryLocatorFault_Dec(InvalidQueryLocatorFault_Def):
        literal = "InvalidQueryLocatorFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.InvalidQueryLocatorFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.InvalidQueryLocatorFault_Def(name=name, ns=ns, **kw)

    class InvalidFieldFault_Dec(InvalidFieldFault_Def):
        literal = "InvalidFieldFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.InvalidFieldFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.InvalidFieldFault_Def(name=name, ns=ns, **kw)

    class MalformedSearchFault_Dec(MalformedSearchFault_Def):
        literal = "MalformedSearchFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.MalformedSearchFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.MalformedSearchFault_Def(name=name, ns=ns, **kw)

    class InvalidIdFault_Dec(InvalidIdFault_Def):
        literal = "InvalidIdFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.InvalidIdFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.InvalidIdFault_Def(name=name, ns=ns, **kw)

    class UnexpectedErrorFault_Dec(UnexpectedErrorFault_Def):
        literal = "UnexpectedErrorFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.UnexpectedErrorFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.UnexpectedErrorFault_Def(name=name, ns=ns, **kw)

    class LoginFault_Dec(LoginFault_Def):
        literal = "LoginFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.LoginFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.LoginFault_Def(name=name, ns=ns, **kw)

    class MalformedQueryFault_Dec(MalformedQueryFault_Def):
        literal = "MalformedQueryFault"
        schema = "urn:fault.partner.soap.sforce.com"

        def __init__(self, name=None, ns=None, **kw):
            name = name or self.__class__.literal
            ns = ns or self.__class__.schema

            ns3.MalformedQueryFault_Def.__init__(self, name=name, ns=ns, **kw)
            self.typecode = ns3.MalformedQueryFault_Def(name=name, ns=ns, **kw)

    class ExceptionCode_Def(ZSI.TC.String):
        def __init__(self, name=None, ns=None, **kw):
            aname = None
            if name:
                kw["pname"] = name
                kw["aname"] = "_%s" % name
            ZSI.TC.String.__init__(self, **kw)

# define class alias for subsequent ns classes
ns3 = urn_fault_partner_soap_sforce_com



